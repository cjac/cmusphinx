dnl Welcome to the Sphinx-3 automated build system.
dnl try not to hurt yourself ;)

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(sphinx3,0.1)
AM_CONFIG_HEADER(config.h)


CFLAGS=${CFLAGS:--g -O2 -Wall}

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_TYPE_SIGNAL

# hmmdata=`ls -1 $srcdir/model/hmm/hub4_cd_continuous_8gau_1s_c_d_dd | egrep -v '(Makefile|CVS)'`
hmmdata=`ls -1 /dev/null | egrep -v '(Makefile|CVS)'`
hmmdata=`echo $hmmdata`

# lmdata=`ls -1 $srcdir/model/lm/an4 | egrep -v '(Makefile|CVS)' | sed 's/\.in//g'`
lmdata=`ls -1 /dev/null | egrep -v '(Makefile|CVS)' | sed 's/\.in//g'`
lmdata=`echo $lmdata`

docdata=`ls -1 $srcdir/doc | egrep -v '(Makefile|CVS)'`
docdata=`echo $docdata`

AC_CANONICAL_HOST


dnl
dnl determine audio type or use none if none supported on this platform
dnl

ad_files=""
ad_libs=""
audio_test_file=""

if test "x$ad_files" = "x"; then
        case $host in
                *-*-linux*)
                        ad_files="ad_oss.lo"
                        ad_backend="AD_BACKEND_OSS"
                        CFLAGS="$CFLAGS -DAD_BACKEND_OSS"
			audio_test_file="pittsburgh.littleendian"
                        ;;
                # FIXME: isn't this the same OSS as on Linux?
                *-*-freebsd*|*-*-netbsd*|*-*-openbsd*)
                        ad_files="ad_oss_bsd.lo mulaw_base.lo"
                        CFLAGS="$CFLAGS -DAD_BACKEND_OSS_BSD"
			audio_test_file="pittsburgh.littleendian"
                        ;;
                *-*-osf*)
                        ad_files="ad_osf.lo mulaw_base.lo"
                        CFLAGS="$CFLAGS -DAD_BACKEND_OSF"
			audio_test_file="pittsburgh.littleendian"
                        ;;
                *-*-irix*)
                        ad_files="ad_irix.lo mulaw_base.lo"
                        ad_libs="-laudio"
                        CFLAGS="$CFLAGS -DAD_BACKEND_IRIX"
			audio_test_file="pittsburgh.littleendian"
                        ;;
                *-*-sunos4*)
                        ad_files="ad_sunos.lo audio_utils_sunos.lo"
                        ad_libs="-lm -lnsl -ldl"
                        CFLAGS="$CFLAGS -D__BIG_ENDIAN__ -Dsunos -DAD_BACKEND_SUNOS"
			audio_test_file="pittsburgh.bigendian"
                        ;;
                *-*-solaris*)
                        ad_files="ad_sunos.lo audio_utils_sunos.lo"
                        ad_libs="-lm -lnsl -lsocket -ldl"
                        CFLAGS="$CFLAGS -D__BIG_ENDIAN__ -Dsunos -DAD_BACKEND_SUNOS"
			audio_test_file="pittsburgh.bigendian"
                        ;;
                                *86*-*-solaris*)
                        ad_files="ad_sunos.lo audio_utils_sunos.lo"
                        ad_libs="-lm -lnsl -lsocket -ldl"
                        ad_backend="AD_BACKEND_SUNOS"
                        CFLAGS="$CFLAGS -D__BIG_ENDIAN__ -Dsunos -DAD_BACKEND_SUNOS"
			audio_test_file="pittsburgh.littleendian"
                        ;;
*-*-*win32*)
                        ad_files="play_win32.lo rec_win32.lo"
			audio_test_file="pittsburgh.littleendian"
                        ;;
                *)
                        ad_files="ad_base.lo"
                        CFLAGS="$CFLAGS -DAD_BACKEND_NONE"
			audio_test_file="pittsburgh.littleendian"
                        AC_MSG_RESULT([No audio interface for host type $host.])
                        ;;
        esac
fi

AC_PATH_PROG(PERL,perl)
AC_PATH_PROG(CSH,csh)
AC_SUBST(hmmdata)
AC_SUBST(lmdata)
AC_SUBST(docdata)
AC_SUBST(ad_files)
AC_SUBST(ad_libs)
AC_SUBST(audio_test_file)
AC_SUBST(PERL)
AC_SUBST(CSH)

AM_PROG_LIBTOOL

AC_OUTPUT([ 
Makefile
src/Makefile
src/libs3audio/Makefile
src/libs3decoder/Makefile
src/libutil/Makefile
src/programs/Makefile
scripts/Makefile
scripts/sphinx3-test
scripts/sphinx3-simple
doc/Makefile])

chmod +x scripts/sphinx3-simple
chmod +x scripts/sphinx3-test
