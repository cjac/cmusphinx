# Automatically generated by configure
#
# Makefile for CMU-Cambridge Statistical Language Modeling toolkit.

# make            Compile executables, but leave them in current directory
# make clean      Remove all object files (*.o) 
# make spotless   Remove all object files (*.o), excutables and backup files 
# make install    Compile executables, and install them in BINDIR. Also 
#                 install libSLM2.a in LIBDIR


CC := @CC@
AR := @AR@
RANLIB := @RANLIB@
INSTALL := @INSTALL@

DEFS := @DEFS@
CFLAGS := @CFLAGS@
CPPFLAGS := @CPPFLAGS@ -I. -I..
LDFLAGS := @LDFLAGS@
LIBS := @LIBS@

prefix := @prefix@
exec_prefix = @exec_prefix@

BINDIR          = @bindir@
LIBDIR          = @libdir@

LIB             = libSLM3.a

EXECS           = text2wfreq wfreq2vocab text2idngram idngram2lm  \
		  binlm2arpa idngram2stats evallm text2wngram ngram2mgram  \
                  wngram2idngram mergeidngram interpolate lm_combine 

AC_OBJS         = libs/ac_hash.o libs/ac_lmfunc_impl.o libs/ac_parsetext.o

PC_OBJS         = libs/pc_comline.o  libs/pc_message.o

RR_OBJS         = libs/parse_line.o libs/quit.o \
                  libs/rd_wlist_arry.o libs/read_voc.o \
                  libs/read_wlist_si.o libs/rr_calloc.o \
                  libs/rr_feof.o libs/rr_fexists.o \
                  libs/rr_filesize.o libs/rr_fopen.o libs/rr_fread.o \
                  libs/rr_fseek.o libs/rr_fwrite.o libs/rr_iopen.o \
                  libs/rr_malloc.o libs/rr_oopen.o libs/salloc.o \
                  libs/sih.o

IDNGRAM2LM_OBJS = liblmest/bo_ng_prob.o liblmest/calc_mem_req.o liblmest/compute_back_off.o \
                  liblmest/compute_discount.o liblmest/compute_unigram.o liblmest/get_ngram.o \
                  liblmest/increment_context.o liblmest/lookup_index_of.o \
                  liblmest/short_indices.o liblmest/two_byte_alphas.o liblmest/write_lms.o \
                  liblmest/num_of_types.o liblmest/guess_mem.o liblmest/counts.o \
		  liblmest/miscella.o liblmest/ngram.o  liblmest/idngram2lm.o liblmest/generate.o \
	          liblmest/genrand.o

EVALLM_OBJS     = liblmest/arpa_bo_ng_prob.o liblmest/bo_ng_prob.o liblmest/calc_prob_of.o \
                  liblmest/decode_bo_case.o liblmest/gen_fb_list.o liblmest/load_lm.o \
                  liblmest/lookup_index_of.o liblmest/parse_comline.o liblmest/perplexity.o \
                  liblmest/short_indices.o liblmest/stats.o liblmest/two_byte_alphas.o liblmest/validate.o \
                  liblmest/num_of_types.o liblmest/counts.o liblmest/disc_meth.o \
		  liblmest/disc_meth_absolute.o liblmest/disc_meth_linear.o liblmest/disc_meth_witten_bell.o \
		  liblmest/disc_meth_good_turing.o

BINLM2ARPA_OBJS = liblmest/load_lm.o liblmest/write_lms.o liblmest/short_indices.o \
                  liblmest/two_byte_alphas.o liblmest/num_of_types.o liblmest/stats.o liblmest/counts.o

OBJS            = $(IDNGRAM2LM_OBJS) $(EVALLM_OBJS) $(BINLM2ARPA_OBJS) \
                  liblmest/get_ngram.o $(PC_OBJS) $(RR_OBJS) $(AC_OBJS)

default: $(EXECS)

$(EXECS): $(LIB)

$(LIB): $(OBJS)
	$(RM) $(LIB)
	$(AR) cruv $(LIB) $(OBJS)
	$(RANLIB) $(LIB)

.c.o:
	$(CC) $(CFLAGS) $(DEFS) $(CPPFLAGS) -o $@ -c $<

.SUFFIXES: .c .o

install: $(EXECS)
	-mkdir $(BINDIR) $(LIBDIR)
	for i in $(EXECS); do \
		$(INSTALL) $$i $(BINDIR); \
	done
	$(INSTALL) $(LIB) $(LIBDIR)

clean:
	$(RM) $(OBJS) $(EXECS)

spotless: clean
	$(RM) $(EXECS) $(LIB) *~

evallm: 
	$(CC) $(CFLAGS) -o evallm programs/evallm.c $(LIB) $(LDFLAGS) $(LIBS)

text2wngram: 
	$(CC) $(CFLAGS) -o text2wngram programs/text2wngram.c $(LIB) $(LDFLAGS) $(LIBS)

text2idngram:
	$(CC) $(CFLAGS) -o text2idngram programs/text2idngram.c $(LIB) $(LDFLAGS) $(LIBS)

binlm2arpa:
	$(CC) $(CFLAGS) -o binlm2arpa programs/binlm2arpa.c $(LIB) $(LDFLAGS) $(LIBS)

#Until we merge arpa_lm_t and ng_t, we shouldn't have this application. 
#arpa2binlm:
#	$(CC) $(CFLAGS) -o arpa2binlm programs/arpa2binlm.c $(LIB) $(LDFLAGS) $(LIBS)

ngram2mgram: 
	$(CC) $(CFLAGS) -o ngram2mgram programs/ngram2mgram.c $(LIB) $(LDFLAGS) $(LIBS)

idngram2stats:
	$(CC) $(CFLAGS) -o idngram2stats programs/idngram2stats.c $(LIB) $(LDFLAGS) $(LIBS)

wfreq2vocab:
	$(CC) $(CFLAGS) -o wfreq2vocab programs/wfreq2vocab.c $(LIB) $(LDFLAGS) $(LIBS)

text2wfreq:
	$(CC) $(CFLAGS) -o text2wfreq programs/text2wfreq.c $(LIB) $(LDFLAGS) $(LIBS)

wngram2idngram:
	$(CC) $(CFLAGS) -o wngram2idngram programs/wngram2idngram.c $(LIB) $(LDFLAGS) $(LIBS)

mergeidngram:
	$(CC) $(CFLAGS) -o mergeidngram programs/mergeidngram.c $(LIB) $(LDFLAGS) $(LIBS)

idngram2lm: 
	$(CC) $(CFLAGS) -o idngram2lm programs/idngram2lm.c $(LIB) $(LDFLAGS) $(LIBS)

interpolate:
	$(CC) $(CFLAGS) -o interpolate programs/interpolate.c $(LIB) $(LDFLAGS) $(LIBS)

lm_combine:
	$(CC) $(CFLAGS) -o lm_combine programs/lm_combine.c $(LIB) $(LDFLAGS) $(LIBS)	
