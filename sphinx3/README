
This is Sphinx 3.3 (s3.3), one of Carnegie Mellon University's open
source large vocabulary, speaker-independent continuous speech
recognition engine. Please see the LICENSE file for terms of use.

THIS IS A RESEARCH SYSTEM.  This is also an early release
of a research system.  We know the APIs and function
names are likely to change, and that several tools need
to be made available to make this all complete.  With
your help and contributions, this can progress in response
to the needs and patches provided.

Please see the web site at

   http://www.speech.cs.cmu.edu/sphinx/

for up-to-date information.

The s3.3 decoder is a live-mode capable version of the s3.2 decoder.
The decoder routine is stored in a library called libs3decoder.a
The decoder function takes blocks of speech samples and returns partial 
hypotheses for the blocks decoded during runtime. An example of its
use is given in main_live_example.c

This directory contains the scripts and instructions necessary for
building models for the CMU Sphinx Recogniser.

This distribution is free software, see COPYING for licence.

This distribution now uses GNU autoconf to find out basic information
about your system, and should compile on most Unix and Unix-like
systems, and certainly on Linux.  To build, simply run

    ./configure
    make

(Or whatever you call GNU Make).  This should configure everything
automatically, though it may fail if it cannot locate Perl 5 and
Festival on your system.  To fix this, set the PERL and FESTIVAL
environment variables to point to the appropriate binaries.

This work was build over a large number of years at CMU by most of the
people in the Sphinx Group, some code goes back to 1986.  The most
recent work in tidying this up for release includes the following,
listed alphabetically (at least these are the people who are most
likely able to help you).

Alan W Black (awb@cs.cmu.edu)
Evandro Gouvea (egouvea+@cs.cmu.edu)
Ricky Houghton (ricky.houghton@cs.cmu.edu)
Kevin Lenzo (lenzo@cs.cmu.edu)
Rita Singh (rsingh+@cs.cmu.edu)
Eric Thayer
