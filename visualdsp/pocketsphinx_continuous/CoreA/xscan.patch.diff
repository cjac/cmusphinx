--- xscan.orig.c	2008-02-23 20:40:23.156250000 +0200
+++ xscan.c	2008-02-23 19:52:53.640625000 +0200
@@ -5,40 +5,6 @@
  * (c) Copyright 1998-2004 Analog Devices, Inc.  All rights reserved.
  *
  ************************************************************************/
-#pragma file_attr(  "libName=libio")
-#if __ADSPBLACKFIN__
-#if defined(__DOUBLES_ARE_FLOATS__)
-#pragma file_attr(  "libFunc=_doscan_32")
-#pragma file_attr(  "libFunc=__doscan_32")
-#else
-#pragma file_attr(  "libFunc=__doscan_64")
-#pragma file_attr(  "libFunc=___doscan_64")
-#endif
-#else /* platform not valid */
-#if __ADSP21000__
-#if defined(__DOUBLES_ARE_FLOATS__)
-#pragma file_attr(  "libFunc=_doscan_32")
-#pragma file_attr(  "libFunc=__doscan_32")
-#else
-#pragma file_attr(  "libFunc=_doscan_64")
-#pragma file_attr(  "libFunc=__doscan_64")
-#endif
-#endif
-#endif
-#pragma file_attr(  "libGroup=stdio.h")
-#pragma file_attr(  "libFunc=fread")
-#pragma file_attr(  "libFunc=_fread")
-#pragma file_attr(  "libFunc=fgetc")
-#pragma file_attr(  "libFunc=_fgetc")
-#pragma file_attr(  "libFunc=fgets")
-#pragma file_attr(  "libFunc=_fgets")
-#pragma file_attr(  "libFunc=fscanf")
-#pragma file_attr(  "libFunc=_fscanf")
-#pragma file_attr(  "libFunc=scanf")
-#pragma file_attr(  "libFunc=_scanf")
-#pragma file_attr(  "prefersMem=external")
-#pragma file_attr(  "prefersMemNum=70")
-
 #include "_stdio.h"
 
 #include <stdio.h>
@@ -84,9 +50,6 @@
     (CVT)->args += sizeof(TYP)
 #endif
 
-// These are the basic get character and unget character macros.
-#define GET1(CVT)       ((CVT)->nread++,(CVT)->getfn(DO_GETC, (CVT)->context))
-#define UNGET1(CH, CVT) ((CVT)->nread--,(CVT)->getfn(CH, (CVT)->context))
 
 // Tests whether there are NREAD0 more characters available from this
 // width-limited field.
@@ -115,6 +78,23 @@
 
 */
 
+// These are the basic get character and unget character macros.
+void UNGET1(char CH, ScanConversionT* cvt)
+{
+     if (CH!=EOF) 
+     	cvt->nread--;
+     cvt->getfn(CH, cvt->context);
+}
+
+static char GET1(ScanConversionT* cvt)       
+{
+    char ch;
+    cvt->nread++;
+    ch = cvt->getfn(DO_GETC, cvt->context);
+    if (ch == EOF)
+    	cvt->nread--;
+}
+
 
 // Returns 1 (success), 0 (failure), or EOF
 static int
@@ -533,8 +513,8 @@
             if (cvt->assign)
                 *p = '\0';
 
-            if (ch < 0 && ((cvt->nread-nread0)==1))
-                return 0;
+            if (ch < 0 && ((cvt->nread-nread0)==0))
+                return EOF;
         }
         return 1;
 
